/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DoctorWhereUniqueInput } from "../../doctor/base/DoctorWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { DoctorListRelationFilter } from "../../doctor/base/DoctorListRelationFilter";
import { HospitalWhereUniqueInput } from "../../hospital/base/HospitalWhereUniqueInput";
import { HospitalListRelationFilter } from "../../hospital/base/HospitalListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";

@InputType()
class DepartmentWhereInput {
  @ApiProperty({
    required: false,
    type: () => DoctorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DoctorWhereUniqueInput)
  @IsOptional()
  @Field(() => DoctorWhereUniqueInput, {
    nullable: true,
  })
  doctor?: DoctorWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => DoctorListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DoctorListRelationFilter)
  @IsOptional()
  @Field(() => DoctorListRelationFilter, {
    nullable: true,
  })
  doctors?: DoctorListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => HospitalWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => HospitalWhereUniqueInput)
  @IsOptional()
  @Field(() => HospitalWhereUniqueInput, {
    nullable: true,
  })
  hospital?: HospitalWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => HospitalListRelationFilter,
  })
  @ValidateNested()
  @Type(() => HospitalListRelationFilter)
  @IsOptional()
  @Field(() => HospitalListRelationFilter, {
    nullable: true,
  })
  hospitals?: HospitalListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;
}

export { DepartmentWhereInput as DepartmentWhereInput };
